name: CI to Docker Hub 

on:
  push:
    branches:
      - master
    paths:
      - apps/publisher/*

jobs:
  push-publisher:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Generate image tags
        id: tags
        run: |
          PACKAGE_VERSION=$(awk '/version/{gsub(/("|",)/,"",$2);print $2};' apps/publisher/package.json)
          echo ::set-output name=versions::truelecter86/tt-publisher:$PACKAGE_VERSION,truelecter86/tt-publisher:latest
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./apps/publisher/
          file: ./apps/publisher/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ steps.tags.outputs.versions }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}